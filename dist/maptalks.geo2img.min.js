/*!
 * maptalks.geo2img v0.2.0-beta.1
 * LICENSE : MIT
 * (c) 2016-2020 maptalks.org
 */
/*!
 * requires maptalks@>=0.31.0 
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.maptalks=t.maptalks||{})}(this,function(t){"use strict";var i=function(e,r){var o={};return Object.keys(e).forEach(function(t){o[t]=e[t]}),Object.keys(r).forEach(function(t){o[t]=r[t]}),o};var e,s=(function(t){var i,e,r;i=["Point","LineString","Polygon"],e=["MultiPoint","MultiLineString","MultiPolygon"],r={explode:function(r){return-1<e.indexOf(r.type)&&r.coordinates.map(function(t){var e={};return e.type=r.type.replace("Multi",""),e.coordinates=t,r.crs&&(e.crs=r.crs),e})},implode:function(t){var e=t.every(function(t){return-1<i.indexOf(t.type)}),r=t[0].crs||0,o=t.every(function(t){return(t.crs||0)==r});if(e&&o){var n={};return n.type="Multi"+t[0].type,n.coordinates=[],0!=r&&(n.crs=r),t.forEach(function(t){n.coordinates.push(t.coordinates)}),n}return!1}},t.exports?t.exports=r:window&&(window.multigeojson=r)}(e={exports:{}},e.exports),e.exports);function p(t,e,r){return t.map(function(t){return(t[0]-r.x)/e+","+(r.y-t[1])/e}).join(" ")}function a(t,e,r,o){var n=o&&o.r?o.r:1,i=!(!o||!o.hasOwnProperty("pointAsCircle"))&&o.pointAsCircle,s=p([t.coordinates],e,r);return i?[s]:["M"+s+" m"+-n+",0 a"+n+","+n+" 0 1,1 "+2*n+",0 a"+n+","+n+" 0 1,1 "+-2*n+",0"]}function u(t,e,r,o){return["M"+p(t.coordinates,e,r)]}function c(t,e,r,o){var n,i;n=p(t.coordinates[0],e,r),1<t.coordinates.length&&(i=t.coordinates.slice(1,t.coordinates.length));var s="M"+n;if(i)for(var a=0;a<i.length;a++)s+=" M"+p(i[a],e,r);return[s+="Z"]}var l={Point:a,MultiPoint:function(t,e,r,o){var n=!(!o||!o.hasOwnProperty("explode"))&&o.explode,i=s.explode(t).map(function(t){return a(t,e,r,o)[0]});return n?i:[i.join(" ")]},LineString:u,MultiLineString:function(t,e,r,o){var n=!(!o||!o.hasOwnProperty("explode"))&&o.explode,i=s.explode(t).map(function(t){return u(t,e,r)[0]});return n?i:[i.join(" ")]},Polygon:c,MultiPolygon:function(t,e,r,o){var n=!!o.hasOwnProperty("explode")&&o.explode,i=s.explode(t).map(function(t){return c(t,e,r)[0]});return n?i:[i.join(" ").replace(/Z/g,"")+"Z"]}},f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r=function(t){this.options=t||{},this.viewportSize=this.options.viewportSize||{width:256,height:256},this.mapExtent=this.options.mapExtent||{left:-20037508.342789244,right:20037508.342789244,bottom:-20037508.342789244,top:20037508.342789244},this.res=this.calResolution(this.mapExtent,this.viewportSize,this.options.fitTo)};function y(t,e){return e.split(".").reduce(function(t,e,r,o){if(t.hasOwnProperty(e))return t[e];throw new Error(o.slice(0,r+1).join(".")+" is not a valid property path")},t)}r.prototype.calResolution=function(t,e,r){var o=(t.right-t.left)/e.width,n=(t.top-t.bottom)/e.height;if(r){if("width"===r.toLowerCase())return o;if("height"===r.toLowerCase())return n;throw new Error('"fitTo" option should be "width" or "height" ')}return Math.max(o,n)},r.prototype.convert=function(t,e){var r=i(this.options,e||{}),o=[];if("FeatureCollection"==t.type)for(var n=0;n<t.features.length;n++)o=o.concat(this.convertFeature(t.features[n],r));else if("Feature"==t.type)o=this.convertFeature(t,r);else if("GeometryCollection"==t.type)for(n=0;n<t.geometries.length;n++)o=o.concat(this.convertGeometry(t.geometries[n],r));else{if(!l[t.type])return;o=this.convertGeometry(t,r)}return r.callback&&r.callback.call(this,o),o},r.prototype.convertFeature=function(n,t){if(n||n.geometry){var e=i(this.options,t||{});if(e.attributes&&e.attributes instanceof Array){var r=e.attributes;e.attributes=r.reduce(function(t,e){if("string"==typeof e){var r=e.split(".").pop();try{o=y(n,e)}catch(t){o=!1}o&&(t[r]=o)}else if("object"===(void 0===e?"undefined":f(e))&&e.type&&e.property)if("dynamic"===e.type){var o;r=e.key?e.key:e.property.split(".").pop();try{o=y(n,e.property)}catch(t){o=!1}o&&(t[r]=o)}else"static"===e.type&&e.value&&(t[e.property]=e.value);return t},{})}else e.attributes=e.attributes||{};var o=e.attributes.id||n.id||(n.properties&&n.properties.id?n.properties.id:null);return o&&(e.attributes.id=o),this.convertGeometry(n.geometry,e)}},r.prototype.convertGeometry=function(e,t){if(l[e.type]){var r=i(this.options,t||{}),o=r.output||"svg",n=l[e.type].call(this,e,this.res,{x:this.mapExtent.left,y:this.mapExtent.top},r);return"svg"==o.toLowerCase()?n.map(function(t){return function(t,e,r,o){var n={},i=!(!o||!o.hasOwnProperty("pointAsCircle"))&&o.pointAsCircle;"Point"!=e&&"MultiPoint"!=e||!i?(n={d:t},"Polygon"!=e&&"MultiPolygon"!=e||n["fill-rule"]):(n.cx=t.split(",")[0],n.cy=t.split(",")[1],n.r=o&&o.r?o.r:"1");for(var s in r)n[s]=r[s];return n}(t,e.type,r.attributes,r)}).map(function(t){return function(t,e,r){var o=!(!r||!r.hasOwnProperty("pointAsCircle"))&&r.pointAsCircle,n="<path";"Point"!=e&&"MultiPoint"!=e||!o||(n="<circle");for(var i in t)n+=" "+i+'="'+t[i]+'"';return n+="/>"}(t,e.type,r)}):n}};var o=r,n=function(t){return new o(t)};function h(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):function(t,e){for(var r=Object.getOwnPropertyNames(e),o=0;o<r.length;o++){var n=r[o],i=Object.getOwnPropertyDescriptor(e,n);i&&i.configurable&&void 0===t[n]&&Object.defineProperty(t,n,i)}}(t,e))}var d=function(e){function r(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,r),function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,e.call(this,t))}return h(r,e),r.prototype.setMap=function(t){return this.map=t,this},r.prototype.convert=function(t,e){this.geometry=t,this.dom=e;var r=this.geometry.getMap();r&&(this.map=r);var o=this._geoJSON2svgPath();return e.innerHTML=o.join(""),this},r.prototype.remove=function(){return delete this.geometry,delete this.map,delete this.dom,this},r.prototype._geoJSON2svgPath=function(){var t=this.dom.clientWidth,e=this.dom.clientHeight;return n({viewportSize:{width:t,height:e},attributes:this._getAttributes(),mapExtent:this._getMapExtent()}).convert(this.geometry.toGeoJSON())},r.prototype._getMapExtent=function(){var t=this.map.getExtent();if(this.options.useGeoExtent){var e=this.geometry.getExtent();e&&(t=e)}var r=t;return{left:r.xmin,right:r.xmax,bottom:r.ymin,top:r.ymax}},r.prototype._getAttributes=function(){var t={"vector-effect":"non-scaling-stroke","stroke-width":2},e=this.geometry.getSymbol();if(e){var r=e.lineColor,o=e.lineWidth,n=e.lineDasharray,i=e.polygonFill,s=e.polygonOpacity;t.stroke=r||"black",t.fill=i||"transparent",t["stroke-width"]=o||2,t["fill-opacity"]=0===s?0:s||1,t["stroke-dasharray"]=n?n.toString():"none"}var a=t["stroke-width"]/2;return t.transform="scale(1 "+this._getScaleY()+") translate("+a+" "+a+")",t},r.prototype._getScaleY=function(){var t=this.geometry.getCenter();return Math.abs(t.y)/90*(Math.sqrt(2)-1)+1},r}(maptalks.Class);d.mergeOptions({useGeoExtent:!0}),t.Geo2img=d,Object.defineProperty(t,"__esModule",{value:!0}),"undefined"!=typeof console&&console.log("maptalks.geo2img v0.2.0-beta.1, requires maptalks@>=0.31.0.")});